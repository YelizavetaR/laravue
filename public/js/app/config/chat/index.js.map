{"version":3,"file":"js/app/config/chat/index.js?id=7a7a0da36f7808070a75","sources":["webpack:///index.vue","webpack:///./resources/js/views/app/config/chat/index.vue?9eed","webpack:///./resources/js/mixins/config-form.js","webpack:///./resources/js/views/app/config/chat/index.vue","webpack:///./resources/js/views/app/config/chat/index.vue?f99c","webpack:///./resources/js/views/app/config/chat/index.vue?e960"],"sourcesContent":["<template>\n    <base-container boxed with-loader :is-loading=\"isLoading\" :loader-color=\"vars.loaderColor\">\n        <form @submit.prevent=\"submit\">\n\n            <div class=\"row\">\n                <div class=\"col-12 col-md-4 mb-4\">\n                    <switch-wrapper :label=\"$t('general.enabled')\">\n                        <base-switch v-model=\"formData.enabled\"></base-switch>\n                    </switch-wrapper>\n                </div>\n\n                <template v-if=\"formData.enabled\">\n                    <div class=\"col-12 col-md-4 mb-4\">\n                        <switch-wrapper :label=\"$t('config.chat.auto_open')\">\n                            <base-switch v-model=\"formData.autoOpen\"></base-switch>\n                        </switch-wrapper>\n                    </div>\n                    \n                    <div class=\"col-12 col-md-4 mb-4\">\n                        <switch-wrapper :label=\"$t('config.chat.enter_to_submit')\">\n                            <base-switch v-model=\"formData.enterToSubmit\"></base-switch>\n                        </switch-wrapper>\n                    </div>\n                    \n                    <div class=\"col-12 col-md-4 mb-4\">\n                        <switch-wrapper :label=\"$t('config.chat.mute_sound_notification')\">\n                            <base-switch v-model=\"formData.muteSoundNotification\"></base-switch>\n                        </switch-wrapper>\n                    </div>\n                    \n                   <!--  <div class=\"col-12 col-md-4 mb-4\">\n                        <switch-wrapper :label=\"$t('config.chat.separate_window')\">\n                            <base-switch v-model=\"formData.separateWindow\"></base-switch>\n                        </switch-wrapper>\n                    </div> -->\n                </template>\n            </div>\n\n            <div class=\"text-right mt-5\">\n                <base-button type=\"button\" design=\"light\" @click=\"reset\">{{ $t('general.reset') }}</base-button>\n                <base-button type=\"submit\" design=\"primary\">{{ $t('general.save') }}</base-button>\n            </div>\n\n        </form>\n    </base-container>\n</template>\n\n<script>\n    import form from '@mixins/config-form'\n\n    export default {\n        extends: form,\n        data() {\n            return {\n                formData: {\n                    enabled : true,\n                    autoOpen : true,\n                    enterToSubmit : false,\n                    separateWindow : false,\n                    muteSoundNotification : false,\n                    type: 'chat'\n                },\n            }\n        },\n    }\n\n</script>\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"base-container\",\n    {\n      attrs: {\n        boxed: \"\",\n        \"with-loader\": \"\",\n        \"is-loading\": _vm.isLoading,\n        \"loader-color\": _vm.vars.loaderColor\n      }\n    },\n    [\n      _c(\n        \"form\",\n        {\n          on: {\n            submit: function($event) {\n              $event.preventDefault()\n              return _vm.submit($event)\n            }\n          }\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"row\" },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-md-4 mb-4\" },\n                [\n                  _c(\n                    \"switch-wrapper\",\n                    { attrs: { label: _vm.$t(\"general.enabled\") } },\n                    [\n                      _c(\"base-switch\", {\n                        model: {\n                          value: _vm.formData.enabled,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"enabled\", $$v)\n                          },\n                          expression: \"formData.enabled\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _vm.formData.enabled\n                ? [\n                    _c(\n                      \"div\",\n                      { staticClass: \"col-12 col-md-4 mb-4\" },\n                      [\n                        _c(\n                          \"switch-wrapper\",\n                          { attrs: { label: _vm.$t(\"config.chat.auto_open\") } },\n                          [\n                            _c(\"base-switch\", {\n                              model: {\n                                value: _vm.formData.autoOpen,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.formData, \"autoOpen\", $$v)\n                                },\n                                expression: \"formData.autoOpen\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"col-12 col-md-4 mb-4\" },\n                      [\n                        _c(\n                          \"switch-wrapper\",\n                          {\n                            attrs: {\n                              label: _vm.$t(\"config.chat.enter_to_submit\")\n                            }\n                          },\n                          [\n                            _c(\"base-switch\", {\n                              model: {\n                                value: _vm.formData.enterToSubmit,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.formData, \"enterToSubmit\", $$v)\n                                },\n                                expression: \"formData.enterToSubmit\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"col-12 col-md-4 mb-4\" },\n                      [\n                        _c(\n                          \"switch-wrapper\",\n                          {\n                            attrs: {\n                              label: _vm.$t(\n                                \"config.chat.mute_sound_notification\"\n                              )\n                            }\n                          },\n                          [\n                            _c(\"base-switch\", {\n                              model: {\n                                value: _vm.formData.muteSoundNotification,\n                                callback: function($$v) {\n                                  _vm.$set(\n                                    _vm.formData,\n                                    \"muteSoundNotification\",\n                                    $$v\n                                  )\n                                },\n                                expression: \"formData.muteSoundNotification\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                : _vm._e()\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"text-right mt-5\" },\n            [\n              _c(\n                \"base-button\",\n                {\n                  attrs: { type: \"button\", design: \"light\" },\n                  on: { click: _vm.reset }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"general.reset\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"base-button\",\n                { attrs: { type: \"submit\", design: \"primary\" } },\n                [_vm._v(_vm._s(_vm.$t(\"general.save\")))]\n              )\n            ],\n            1\n          )\n        ]\n      )\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { mapGetters, mapActions } from 'vuex'\nimport * as ConfigAPI from '@api/config'\nimport { formatKeysToSnakeCase } from '@js/core/utils/formatter'\n\nexport default {\n    components: {},\n    data() {\n        return {\n            formData: {},\n            formErrors: {},\n            initialFormData: null,\n            initianLength: 0,\n            emptyFormData: null,\n            entity: null,\n            preRequisite: {},\n            isLoading: true,\n            dataType: null,\n            configType: '',\n        }\n    },\n    computed: {\n        ...mapGetters('config', [\n            'configs',\n            'vars',\n        ]),\n    },\n    methods: {\n        ...mapActions('config', [\n            'GetConfig',\n        ]),\n        ...mapActions('navigation', [\n            'Generate',\n        ]),\n        findActualValue(value, options, key = 'uuid') {\n            return options.find(option => option[key] === value) || null\n        },\n        submit(preference = false) {\n            if(formUtil.isUnchanged(this.initialFormData, this.formData)) {\n                this.$toasted.info(this.$t('general.nothing_changed'), this.$toastConfig.info)\n                return false\n            }\n\n            this.isLoading = true\n\n            this.formData.type = this.formData.type.snakeCase()\n\n            const storeFn =  preference === true ? ConfigAPI.updateUserPref : (this.configType === 'module' ? ConfigAPI.updateModule : ConfigAPI.update)\n\n            if (typeof this.beforeSubmit === \"function\") { \n                this.beforeSubmit()\n            }\n\n            storeFn(this.formData)\n                .then(response => {\n                    this.GetConfig()\n                        .then(() => {\n                            this.$toasted.success(response.message, this.$toastConfig)\n                            this.initialFormData = _.cloneDeep(this.formData)\n                            this.isLoading = false\n                        })\n                        .catch(error => {\n                            this.isLoading = false\n                            this.formErrors = formUtil.handleErrors(error)\n                        })\n\n                    if (typeof this.afterSubmit === \"function\") { \n                        this.afterSubmit()\n                    }\n                    if (typeof this.afterSubmitSuccess === \"function\") { \n                        this.afterSubmitSuccess()\n                    }\n                })\n                .catch(error => {\n                    this.isLoading = false\n                    this.formErrors = formUtil.handleErrors(error)\n\n                    if (typeof this.afterSubmit === \"function\") { \n                        this.afterSubmit()\n                    }\n                    if (typeof this.afterSubmitError === \"function\") { \n                        this.afterSubmitError()\n                    }\n                })\n        },\n        reset() {\n            formUtil.confirmAction()\n                .then((result) => {\n                    if (result.value) {\n                        this.formData = Object.assign({}, this.formData, _.cloneDeep(this.initialFormData))\n                    }\n                })\n        },\n        unsavedCheck(next) {\n            formUtil.unsavedCheckAlert(this.initialFormData, this.formData, next)\n        },\n        fillPreRequisite(response) {\n            this.preRequisite.objForEach((value, key) => {\n                this.preRequisite[key] = response[key] || value\n            })\n\n            this.isLoading = false\n        },\n        fillFormData() {\n            this.isLoading = true\n            if(this.formData.type && this.configs[this.formData.type]) {\n                this.formData = formUtil.assignValues(this.formData, this.configs[this.formData.type])\n            }\n\n            if(this.formData.types && Array.isArray(this.formData.types)) {\n                this.formData.types.forEach((value) => {\n                    this.formData = formUtil.assignValues(this.formData, this.configs[value])\n                })\n            }\n\n            if (typeof this.addNewRow === \"function\" && typeof this.addNewRowIfNone === \"function\") { \n                this.addNewRowIfNone()\n            }\n\n            this.isLoading = false\n        }, \n        async getInitialData(callbackFn) {\n            this.isLoading = true\n            try {\n                const response = await ConfigAPI.getPreRequisite(Object.keys(this.preRequisite).join(','))\n                this.fillPreRequisite(response)\n                \n                if(callbackFn) {\n                    this.$nextTick(() => {\n                        callbackFn()\n                    })\n                }\n                return response\n            } catch (error) {\n                this.isLoading = false\n                this.formErrors = formUtil.handleErrors(error)\n                throw error\n            }\n        },\n    },\n    mounted() {\n        this.fillFormData()\n        this.initialFormData = _.cloneDeep(this.formData)\n    },\n    beforeDestroy () {\n        delete this.formData\n        delete this.formErrors\n        delete this.preRequisite\n    },\n    beforeRouteLeave(to, from, next) {\n        this.unsavedCheck(next)\n    }\n}\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=65f7812a&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"F:\\\\WORK\\\\web\\\\Laravel-vue\\\\Corp-Sec\\\\Corp-Sec\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('65f7812a')) {\n      api.createRecord('65f7812a', component.options)\n    } else {\n      api.reload('65f7812a', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=65f7812a&\", function () {\n      api.rerender('65f7812a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/app/config/chat/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=65f7812a&\""],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAUA;AAbA;;;;;;;;;;;;AClaA;AACA;AAdA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AA/GA;AAiHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlJA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}